// mailchimp mailing list user subscription via the mailchimp API and serialized XML// assumes: firstName_txt, lastName_txt, email_txt(valid required), response_txt, submit_mc// author: christian @ christiancox.com// shoot me a note with any bugs!// Edit your MailChimp specifics here. // You shouldn't have to edit anything but these two variables unless you are collecting additional data._global.apiKey = "07e0220f6250675c6b02d43407fd2f52-us2";_global.listID = "7293ef3dd2";// set tab order for form usabilityfirstName_txt.tabIndex = 1;lastName_txt.tabIndex = 2;email_txt.tabIndex = 3;submit_mc.tabIndex = 4;// submissionsubmit_mc.onRelease = function(){	// show a loading message in case transmission is slow	response_txt.text = "Sending...";		// gather form data	var firstName:String = firstName_txt.text;	var lastName:String = lastName_txt.text;	var email:String = email_txt.text;		// check the email address	// if it's valid....	if(validEmail(email)){				// disable the submit button while loading data		submit_mc.enabled = false;				// set up result xml		var result_xml:XML = new XML();		result_xml.ignoreWhite = true;		result_xml.onLoad = function(success){						// if the user is subscribed successfully, the result set will look something like			// "<MCAPI type='boolean'>1</MCAPI>"			// so you can reset the form and display the confirmation message.			if(result_xml.firstChild.firstChild.toString() == "1"){				resetForm('Please check your email to confirm your subscription.');			}						// or else there was a data error, so you need to parse the error code.			else{								// Convert the error string from XML data to a string, then display it in the response text field.				var resultCode = result_xml.firstChild.childNodes[0].childNodes[0].toString();				_root.resetForm(resultCode);			}		}						// Set up a send XML object, even though we're not really sending anything in XML		// All your data will be encoded in the send_url variable.		var send_xml:XML = new XML();		send_xml.ignoreWhite = true;		// Here's where your data is added. 		// For additional text fields, add additional merge_vars array elements and append at the end.		var send_url:String = "http://us2.api.mailchimp.com/1.2/?output=xml&method=listSubscribe&apikey=" + apiKey + "&id=" + listID + "&email_address=" + email + "&merge_vars[FNAME]=" + firstName + "&merge_vars[LNAME]=" + lastName;		// And here's how you send/load:		send_xml.sendAndLoad(send_url, result_xml);					}	// or else there's an issue with the email address	else{		// show the email error.		showErrors();	}}// validate an email addressfunction validEmail(inputEmail:String):Boolean{	if (inputEmail.indexOf(" ")>0) {		return false;	}	var emailArray:Array=inputEmail.split("@");	if (emailArray.length != 2 || emailArray[0].length == 0 || emailArray[1].length ==0) {		return false;	}	var postArray:Array=emailArray[1].split(".");	if (postArray.length < 2) {		return false;	}	for (var i:Number=0; i<postArray.length; i++) {		if (postArray[i].length < 1) {				return false;		}	}	var suffix=postArray[postArray.length-1];	if (suffix.length < 2 || suffix.length > 3) {		return false;	}	return true;}// delete all form elements and display a response messagefunction resetForm(pResponse){	submit_mc.enabled = true;	firstName_txt.text = "";	lastName_txt.text = "";	email_txt.text = "";	response_txt.text = pResponse;	Selection.setFocus('firstName_txt');}// select the email address and display an error messagefunction showErrors(){	Selection.setFocus('email_txt');	Selection.setSelection(0, email_txt.length);	response_txt.text = "Invalid email address.";	submit_mc.enabled = true;}/*------ License -----------Copyright (c) 2009 Christian Cox, christiancox.comPermission is hereby granted, free of charge, to any personobtaining a copy of this software and associated documentationfiles (the "Software"), to deal in the Software withoutrestriction, including without limitation the rights to use,copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom theSoftware is furnished to do so, subject to the followingconditions:The above copyright notice and this permission notice shall beincluded in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIESOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE ANDNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHTHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISINGFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OROTHER DEALINGS IN THE SOFTWARE.*/